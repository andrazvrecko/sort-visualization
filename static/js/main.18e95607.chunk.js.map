{"version":3,"sources":["logo.svg","Algorithms/algorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["quickSortAlgorithm","array","left","right","animations","index","pivot","Math","floor","i","j","animation","compare","swap","temp","push","partition","SortingVisualizer","props","onSliderChange","value","setState","speed","onSliderArrayChange","getMaxElements","state","width","arraySize","resetArray","updateWindowDimensions","bind","min","max","this","random","arrayBars","document","getElementsByClassName","length","style","backgroundColor","window","addEventListener","removeEventListener","innerWidth","bubbleSort","newAnimations","console","log","target","dist","lastElem","oneIdx","twoIdx","oneStyle","twoStyle","color","setTimeout","height","currElem","newArr","quickSort","amount","getBarWidth","className","map","idx","step","onChange","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18e95607.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const bubbleSort = array => {\r\n    const animations = []\r\n    if (array.length <= 1) return array;\r\n\r\n    for (let i = 0; i < array.length - 1; i++) {\r\n\t\tfor (let j = 0; j < array.length - 1 - i; j++) {\r\n            let animation = {}\r\n            animation.compare = [j, j+1]\r\n            if (array[j] > array[j + 1]) {\r\n                animation.swap = [j, j+1]\r\n\t\t\t\tlet temp = array[j];\r\n\t\t\t\tarray[j] = array[j + 1];\r\n\t\t\t\tarray[j + 1] = temp;\r\n            }\r\n            animations.push(animation)\r\n\t\t}\r\n\t}\r\n\treturn animations;\r\n}\r\n\r\nexport const quickSort = array => {\r\n    if (array.length <= 1) return array;\r\n    \r\n    const animations = []\r\n    const newArr = quickSortAlgorithm(array, 0, array.length - 1, animations)\r\n    \r\n    console.log(newArr);\r\n    return animations;\r\n}\r\n\r\n\r\nconst partition = (array, left, right, animations) => {\r\n    var pivot = array[Math.floor((right + left) / 2)],\r\n        i = left,\r\n        j = right;\r\n    while (i <= j) {\r\n        while (array[i] < pivot) {\r\n            i++;\r\n        }\r\n        while (array[j] > pivot) {\r\n            j--;\r\n        }\r\n        let animation = {}\r\n        animation.compare = [i, j]\r\n        if (i <= j) {\r\n            animation.swap = [i, j]\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;   \r\n            i++;\r\n            j--;\r\n        }\r\n        animations.push(animation)\r\n    }\r\n    return i;\r\n}\r\n\r\nconst quickSortAlgorithm = (array, left, right, animations) => {\r\n    var index = partition(array, left, right, animations);\r\n    \r\n    if (left < index - 1) {\r\n        quickSortAlgorithm(array, left, index - 1, animations);\r\n    }\r\n    if (index < right) {\r\n        quickSortAlgorithm(array, index, right, animations);\r\n    }\r\n    return array;\r\n}","import React from 'react'\r\nimport './SortingVisualizer.css'\r\nimport './../Algorithms/algorithms'\r\nimport { bubbleSort, quickSort } from './../Algorithms/algorithms';\r\nimport Slider, {Range} from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n            width: 0,\r\n            speed: 1,\r\n            arraySize: 150,\r\n        };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\r\n    }\r\n\r\n    resetArray(){\r\n        const array = [];\r\n        \r\n        if(this.state.arraySize > getMaxElements(this.state.width)){\r\n            this.setState({arraySize: getMaxElements(this.state.width)})\r\n        }\r\n\r\n        for(let i = 0; i < this.state.arraySize; i++){\r\n            array.push(randomIntFromInterval(5,700));\r\n        }\r\n        this.setState({array});\r\n\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        for(let i = 0; i < arrayBars.length; i++){\r\n            arrayBars[i].style.backgroundColor='olive';\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.resetArray();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n      }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth});\r\n        this.resetArray();\r\n      }\r\n    \r\n    bubbleSort() {\r\n        const animations = bubbleSort(this.state.array);\r\n        const newAnimations = [];\r\n        console.log(this.state.array)\r\n        console.log(animations)\r\n        for(const animation of animations){\r\n            newAnimations.push(animation.compare);\r\n            newAnimations.push(animation.compare);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        let target = 3 * this.state.array.length - 3;\r\n        let dist = 9 + (this.state.array.length - 5)*3;\r\n        let lastElem = this.state.array.length - 1;\r\n\r\n        for(let i = 0; i < newAnimations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [oneIdx, twoIdx] = newAnimations[i];\r\n                const oneStyle = arrayBars[oneIdx].style;\r\n                const twoStyle = arrayBars[twoIdx].style;\r\n                const color = i % 3 === 0 ? 'crimson' : 'olive';\r\n                setTimeout(() => {\r\n                    oneStyle.backgroundColor = color;\r\n                    twoStyle.backgroundColor = color;\r\n                }\r\n                , i * (1/this.state.speed));\r\n            } else{\r\n                setTimeout(() => {  \r\n                    if (typeof newAnimations[i] !== 'undefined'){\r\n                        const [oneIdx, twoIdx] = newAnimations[i];\r\n                        const oneStyle = arrayBars[oneIdx].style;\r\n                        const twoStyle = arrayBars[twoIdx].style;\r\n                        const temp = oneStyle.height;\r\n                        oneStyle.height = twoStyle.height;\r\n                        twoStyle.height = temp;\r\n                    }\r\n                }\r\n                , i * (1/this.state.speed))\r\n            }\r\n            if(i + 1 === target){\r\n                console.log(\"Target: \", target, \" Distance: \", dist, \" Elem: \", lastElem);\r\n                target = target + dist;\r\n                dist = dist - 3;\r\n                const currElem = lastElem;\r\n                lastElem = lastElem - 1;\r\n                setTimeout(() => {      \r\n                    arrayBars[currElem].style.backgroundColor='teal';\r\n                }\r\n                , i * (1/this.state.speed))\r\n            }\r\n        }\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        setTimeout(() => {   \r\n            arrayBars[0].style.backgroundColor='teal';\r\n        }\r\n        , newAnimations.length * (1/this.state.speed))\r\n    }\r\n\r\n    quickSort() {\r\n        const animations = quickSort(this.state.array);\r\n        const newAnimations = [];\r\n        console.log(this.state.array)\r\n        console.log(animations)\r\n        for(const animation of animations){\r\n            newAnimations.push(animation.compare);\r\n            newAnimations.push(animation.compare);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        console.log(newAnimations);\r\n        for(let i = 0; i < newAnimations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [oneIdx, twoIdx] = newAnimations[i];\r\n                const oneStyle = arrayBars[oneIdx].style;\r\n                const twoStyle = arrayBars[twoIdx].style;\r\n                const color = i % 3 === 0 ? 'crimson' : 'olive';\r\n                setTimeout(() => {\r\n                    oneStyle.backgroundColor = color;\r\n                    twoStyle.backgroundColor = color;\r\n                }\r\n                , i * 20 * (1/this.state.speed));\r\n            } else{\r\n                setTimeout(() => {  \r\n                    if (typeof newAnimations[i] !== 'undefined'){\r\n                        const [oneIdx, twoIdx] = newAnimations[i];\r\n                        const oneStyle = arrayBars[oneIdx].style;\r\n                        const twoStyle = arrayBars[twoIdx].style;\r\n                        const temp = oneStyle.height;\r\n                        oneStyle.height = twoStyle.height;\r\n                        twoStyle.height = temp;\r\n                    }\r\n                }\r\n                , i * 20 * (1/this.state.speed));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onSliderChange = value => {\r\n        this.setState({speed: value});\r\n    }\r\n    onSliderArrayChange = value => {\r\n        if (value < getMaxElements(this.state.width)){\r\n            this.setState({arraySize: value});\r\n            this.resetArray()\r\n        }\r\n    }\r\n\r\n    render()  {\r\n        const {array} = this.state;\r\n        const width = getBarWidth(this.state.width, this.state.array.length)\r\n        return(\r\n            <>\r\n                <div className=\"container\">\r\n                    {array.map((value, idx) => (\r\n                        <div className=\"array-bar\"\r\n                        key={idx}\r\n                        style={{height: `${value}px`, width:`${width}px`}}></div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"slider\">\r\n                <a>Speed: {this.state.speed}</a>\r\n                    <br />\r\n                    <Slider \r\n                        min={0.01}\r\n                        max={4}\r\n                        step={0.01}\r\n                        value={this.state.speed}\r\n                        onChange={this.onSliderChange}\r\n                    />\r\n                <a>Array Size: {this.state.arraySize}</a>\r\n                <br />\r\n                <Slider \r\n                    min={5}\r\n                    max={getMaxElements(this.state.width)}\r\n                    step={1}\r\n                    value={this.state.arraySize}\r\n                    onChange={this.onSliderArrayChange}\r\n                />    \r\n                <br></br>\r\n                <button onClick={() => this.resetArray()}> Generate New Array</button>\r\n                <button onClick={() => this.bubbleSort()}> Bubble Sort</button>\r\n                <button onClick={() => this.quickSort()}> Quick Sort</button>\r\n                <br />\r\n                <br />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) +  min);\r\n}\r\n\r\nfunction getMaxElements(width){\r\n   return Math.floor((width/100*90)/6)\r\n}\r\n\r\nfunction getBarWidth(width, amount){\r\n    if (typeof width !== 'undefined'){\r\n        width = Math.floor(width * 0.9);\r\n        let newWidth = Math.floor(width/amount)\r\n        return newWidth - 2;\r\n    }\r\n    else return 7;\r\n\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}